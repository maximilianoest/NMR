function checkForMismatchingConfigurations(newConfiguration)

oldSimulation = load(newConfiguration.path2OldResults);
oldConfiguration = oldSimulation.configuration;

[path2Data,~,~,path2LogFile] = ...
    setUpSystemBasedOnMachine(newConfiguration);

orientationAngles = deg2rad(getValuesFromStringEnumeration( ...
    newConfiguration.fibreOrientations,';','numeric'));
fibreOrientationsCount = size(orientationAngles,2);
positionAngles = deg2rad(getValuesFromStringEnumeration( ...
    newConfiguration.myelinPositions,';','numeric'));
positionsInMyelinCount = size(positionAngles,2);

if newConfiguration.fractionForLags ~= ...
        oldSimulation.configuration.fractionForLags
    logMessage(sprintf(['WARNING: The lags do match with that of '...
        'the old simulation. Old: %i, New: %i.'] ...
        ,oldSimulation.lags,lags),path2LogFile,false);
end

newNearestNeighbours = getValuesFromStringEnumeration(newConfiguration ...
    .nearestNeighbours,';','numeric');
oldNearestNeighbours = getValuesFromStringEnumeration(oldConfiguration ...
    .nearestNeighbours,';','numeric');

for nnNr = 1:length(newNearestNeighbours)
    newNN = newNearestNeighbours(nnNr);
    oldNN = oldNearestNeighbours(nnNr);
    if newNN ~= oldNN
        logMessage(sprintf(['ERROR: The considered nearest ' ...
            'neighbours do differ from the old simulation. ' ...
            'Old: %i, New: %i'],oldNN,newNN),path2LogFile,false);
        error('See log file for more information');
    end
    
end

if newConfiguration.mainMagneticField ~= ...
        oldSimulation.configuration.mainMagneticField
    logMessage(sprintf(['ERROR: The magnetic field strength do ' ...
        'differ from the old simulation. Old: %i, New: %i'] ...
        ,newConfiguration.mainMagneticField ...
        ,oldSimulation.configuration.mainMagneticField) ...
        ,path2LogFile,false);
    error('Check log file for more information.');
end
if fibreOrientationsCount ~= ...
        size(oldSimulation.orientationAngles,2) || ...
        positionsInMyelinCount ~= size(oldSimulation.positionAngles,2)
    logMessage(['ERROR: Orienations and/or positions of old ' ...
        'simulation and actual simulation are not the same. ' ...
        'CHECK YOUR CONFIG FILE!'],path2LogFile,false)
    error('Check log file for more information.');
end

oldFileNames = getValuesFromStringEnumeration( ...
    oldConfiguration.fileNames,';','string');
newFileNames = getValuesFromStringEnumeration( ...
    newConfiguration.fileNames,';','string');
if length(oldFileNames) == length(newFileNames)
    for deltaTCounter = 1:length(oldFileNames)
        if ~strcmp(oldFileNames(deltaTCounter) ...
                ,newFileNames(deltaTCounter))
            logMessage(['ERROR: File names are not equal or are not in' ...
                ' the same order like in the old simulation.'] ...
                ,path2LogFile,false);
        end
    end
else
    logMessage(['ERROR: Number of file names in old and new simulation' ...
        ' is not the same'],path2LogFile,false);
    error('Check log file for more information')
end

oldDeltaTs = getValuesFromStringEnumeration(oldConfiguration.deltaTs ...
    ,';','numeric');
newDeltaTs = getValuesFromStringEnumeration(newConfiguration.deltaTs ...
    ,';','numeric');
if length(oldDeltaTs) == length(newDeltaTs)
    for deltaTCounter = 1:length(oldDeltaTs)
        if oldDeltaTs(deltaTCounter) ~= newDeltaTs(deltaTCounter)
            logMessage(['ERROR: Delta T are not equal or are not in' ...
                ' the same order like in the old simulation.'] ...
                ,path2LogFile,false);
        end
    end
else
    logMessage(['ERROR: Number of deltaTs in old and new simulation' ...
        ' is not the same'],path2LogFile,false);
    error('Check log file for more information')
end


end
