function [firstOrderSphericalHarmonic,secondOrderSphericalHarmonic] = ...
    calculateSphericalHarmonics(polarAngle,azimuthAngle ...
    ,nearestNeighbourDistancesPow3)
% This function calculates the spherical harmonics based on the angles and
% distances.

firstOrderSphericalHarmonic = sin(polarAngle).*cos(polarAngle) ...
    .*exp(-1i*azimuthAngle)./nearestNeighbourDistancesPow3;
secondOrderSphericalHarmonic = sin(polarAngle).^2 ...
    .*exp(-2i*azimuthAngle)./nearestNeighbourDistancesPow3;
end
