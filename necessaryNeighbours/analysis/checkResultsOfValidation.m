clc; clear all; close all

results = load("C:\Users\maxoe\Google Drive\Promotion\Results\LIPIDS\DOPS\nearestNeighbours\20220209_Results_validationNearestNeighbours_DOPSlipid.mat");

scaledR1Rates = results.scaledR1Rates;
averagedScaledR1 = squeeze(mean(scaledR1Rates,3));
effectiveR1 = squeeze(mean(averagedScaledR1,2));
nearestNeighbourCases = results.nearestNeighbourCases;
orientationAngles = rad2deg(results.orientationAngles);

% predicted scaled relaxation rates
figure;
set(0,'DefaultLineLineWidth',1.0);
hold on
legendEntries = {};
for nNCasesNr = 1:length(nearestNeighbourCases)
    plot(orientationAngles,squeeze(effectiveR1(:,nNCasesNr)));
    legendEntries{end+1} = sprintf('N = %i' ...
        ,nearestNeighbourCases(nNCasesNr));
end
legend(legendEntries,'interpreter','latex','Location','north' ...
    ,'FontSize',12);
xlabel('Orientation Angle $[\Theta]$','interpreter','latex');
ylabel('Relaxation Rate $[Hz]$','interpreter','latex')
set(gca,'FontSize',12)
title('Effective orientation-dependent relaxation rate for different NN');
hold off
grid minor

% average differences between different cases:
meanDifference = zeros(length(nearestNeighbourCases) ...
    ,size(averagedScaledR1,1),size(averagedScaledR1,2));
for nNCasesNr = 1:length(nearestNeighbourCases)
    predictedR1ForCase = squeeze(scaledR1Rates(:,:,:,nNCasesNr));
    difference = scaledR1Rates(:,:,:,1) - predictedR1ForCase;
    meanDifference(nNCasesNr,:,:) = abs(mean(difference,3));
end

figure;
set(0,'DefaultLineLineWidth',1.0);
hold on
legendEntries = {};
for orientationNr = 1:results.orientationNumber
    for positionNr = 1:results.positionNumber
        plot(nearestNeighbourCases,squeeze(meanDifference(:,orientationNr ...
            ,positionNr)));
        legendEntries{end+1} = sprintf('$\\Theta$: %.1f, $\\varphi$: %.1f' ...
            ,rad2deg(results.orientationAngles(orientationNr)) ...
            ,rad2deg(results.positionAngles(positionNr)));
    end
end
legend(legendEntries,'interpreter','latex','Location','north' ...
    ,'FontSize',12);
xlabel('Number of nearest neigbours','interpreter','latex');
ylabel('Differecne in Relaxation Rate $[Hz]$','interpreter','latex')
set(gca,'FontSize',12)
title('Difference in calculated vs. scaled relaxation rate');
hold off
grid minor


% check correlation functions
correlationFunction0W0 = results.correlationFunction0W0Saver;
correlationFunction1W0 = results.correlationFunction1W0Saver;
correlationFunction2W0 = results.correlationFunction2W0Saver;
samplingFrequency = results.samplingFrequency;
timeAxis = [0:samplingFrequency:(size(correlationFunction0W0,4)-1)*samplingFrequency];


figure;
set(0,'DefaultLineLineWidth',1.0);
hold on
legendEntries = {};
for nNCasesNr = 1:1
    for orientationNr = 1:results.orientationNumber
        for positionNr = 1:results.positionNumber
            plot(timeAxis,squeeze(correlationFunction0W0( ...
                orientationNr,positionNr,nNCasesNr,:) ...
                ./correlationFunction0W0( ...
                orientationNr,positionNr,nNCasesNr,1)));
            legendEntries{end+1} = sprintf('0 $\\omega_0$, NN: %i, $\\Theta$: %.1f, $\\varphi$: %.1f' ...
                ,nearestNeighbourCases(nNCasesNr) ...
                ,rad2deg(results.orientationAngles(orientationNr)) ...
                ,rad2deg(results.positionAngles(positionNr)));
            
            plot(timeAxis,squeeze(correlationFunction1W0( ...
                orientationNr,positionNr,nNCasesNr,:) ...
                ./correlationFunction1W0( ...
                orientationNr,positionNr,nNCasesNr,1)));
            legendEntries{end+1} = sprintf('1 $\\omega_0$, NN: %i, $\\Theta$: %.1f, $\\varphi$: %.1f' ...
                ,nearestNeighbourCases(nNCasesNr) ...
                ,rad2deg(results.orientationAngles(orientationNr)) ...
                ,rad2deg(results.positionAngles(positionNr)));
            
            plot(timeAxis,squeeze(correlationFunction2W0( ...
                orientationNr,positionNr,nNCasesNr,:) ...
                ./correlationFunction2W0( ...
                orientationNr,positionNr,nNCasesNr,1)));
            legendEntries{end+1} = sprintf('2 $\\omega_0$, NN: %i, $\\Theta$: %.1f, $\\varphi$: %.1f' ...
                ,nearestNeighbourCases(nNCasesNr) ...
                ,rad2deg(results.orientationAngles(orientationNr)) ...
                ,rad2deg(results.positionAngles(positionNr)));
        end
    end
end
legend(legendEntries,'interpreter','latex','Location','north' ...
    ,'FontSize',12);
xlabel('Time [sec]','interpreter','latex');
set(gca,'FontSize',12)
title('Normalized correlation functions for different orientations and positions');
hold off
grid minor


figure;
set(0,'DefaultLineLineWidth',1.0);
hold on
legendEntries = {};
for nNCasesNr = 2:2
    for orientationNr = 1:results.orientationNumber
        for positionNr = 1:results.positionNumber
            plot(timeAxis,squeeze(correlationFunction0W0( ...
                orientationNr,positionNr,nNCasesNr,:) ...
                ./correlationFunction0W0( ...
                orientationNr,positionNr,nNCasesNr,1)));
            legendEntries{end+1} = sprintf('0 $\\omega_0$, NN: %i, $\\Theta$: %.1f, $\\varphi$: %.1f' ...
                ,nearestNeighbourCases(nNCasesNr) ...
                ,rad2deg(results.orientationAngles(orientationNr)) ...
                ,rad2deg(results.positionAngles(positionNr)));
            
            plot(timeAxis,squeeze(correlationFunction1W0( ...
                orientationNr,positionNr,nNCasesNr,:) ...
                ./correlationFunction1W0( ...
                orientationNr,positionNr,nNCasesNr,1)));
            legendEntries{end+1} = sprintf('1 $\\omega_0$, NN: %i, $\\Theta$: %.1f, $\\varphi$: %.1f' ...
                ,nearestNeighbourCases(nNCasesNr) ...
                ,rad2deg(results.orientationAngles(orientationNr)) ...
                ,rad2deg(results.positionAngles(positionNr)));
            
            plot(timeAxis,squeeze(correlationFunction2W0( ...
                orientationNr,positionNr,nNCasesNr,:) ...
                ./correlationFunction2W0( ...
                orientationNr,positionNr,nNCasesNr,1)));
            legendEntries{end+1} = sprintf('2 $\\omega_0$, NN: %i, $\\Theta$: %.1f, $\\varphi$: %.1f' ...
                ,nearestNeighbourCases(nNCasesNr) ...
                ,rad2deg(results.orientationAngles(orientationNr)) ...
                ,rad2deg(results.positionAngles(positionNr)));
        end
    end
end
legend(legendEntries,'interpreter','latex','Location','north' ...
    ,'FontSize',12);
xlabel('Time [sec]','interpreter','latex');
set(gca,'FontSize',12)
title('Normalized correlation functions for different orientations and positions');
hold off
grid minor

figure;
set(0,'DefaultLineLineWidth',1.0);
hold on
legendEntries = {};
for nNCasesNr = 3:3
    for orientationNr = 1:results.orientationNumber
        for positionNr = 1:results.positionNumber
            plot(timeAxis,squeeze(correlationFunction0W0( ...
                orientationNr,positionNr,nNCasesNr,:) ...
                ./correlationFunction0W0( ...
                orientationNr,positionNr,nNCasesNr,1)));
            legendEntries{end+1} = sprintf('0 $\\omega_0$, NN: %i, $\\Theta$: %.1f, $\\varphi$: %.1f' ...
                ,nearestNeighbourCases(nNCasesNr) ...
                ,rad2deg(results.orientationAngles(orientationNr)) ...
                ,rad2deg(results.positionAngles(positionNr)));
            
            plot(timeAxis,squeeze(correlationFunction1W0( ...
                orientationNr,positionNr,nNCasesNr,:) ...
                ./correlationFunction1W0( ...
                orientationNr,positionNr,nNCasesNr,1)));
            legendEntries{end+1} = sprintf('1 $\\omega_0$, NN: %i, $\\Theta$: %.1f, $\\varphi$: %.1f' ...
                ,nearestNeighbourCases(nNCasesNr) ...
                ,rad2deg(results.orientationAngles(orientationNr)) ...
                ,rad2deg(results.positionAngles(positionNr)));
            
            plot(timeAxis,squeeze(correlationFunction2W0( ...
                orientationNr,positionNr,nNCasesNr,:) ...
                ./correlationFunction2W0( ...
                orientationNr,positionNr,nNCasesNr,1)));
            legendEntries{end+1} = sprintf('2 $\\omega_0$, NN: %i, $\\Theta$: %.1f, $\\varphi$: %.1f' ...
                ,nearestNeighbourCases(nNCasesNr) ...
                ,rad2deg(results.orientationAngles(orientationNr)) ...
                ,rad2deg(results.positionAngles(positionNr)));
        end
    end
end
legend(legendEntries,'interpreter','latex','Location','north' ...
    ,'FontSize',12);
xlabel('Time [sec]','interpreter','latex');
set(gca,'FontSize',12)
title('Normalized correlation functions for different orientations and positions');
hold off
grid minor


figure;
set(0,'DefaultLineLineWidth',1.0);
hold on
legendEntries = {};
for nNCasesNr = 4:4
    for orientationNr = 1:results.orientationNumber
        for positionNr = 1:results.positionNumber
            plot(timeAxis,squeeze(correlationFunction0W0( ...
                orientationNr,positionNr,nNCasesNr,:) ...
                ./correlationFunction0W0( ...
                orientationNr,positionNr,nNCasesNr,1)));
            legendEntries{end+1} = sprintf('0 $\\omega_0$, NN: %i, $\\Theta$: %.1f, $\\varphi$: %.1f' ...
                ,nearestNeighbourCases(nNCasesNr) ...
                ,rad2deg(results.orientationAngles(orientationNr)) ...
                ,rad2deg(results.positionAngles(positionNr)));
            
            plot(timeAxis,squeeze(correlationFunction1W0( ...
                orientationNr,positionNr,nNCasesNr,:) ...
                ./correlationFunction1W0( ...
                orientationNr,positionNr,nNCasesNr,1)));
            legendEntries{end+1} = sprintf('1 $\\omega_0$, NN: %i, $\\Theta$: %.1f, $\\varphi$: %.1f' ...
                ,nearestNeighbourCases(nNCasesNr) ...
                ,rad2deg(results.orientationAngles(orientationNr)) ...
                ,rad2deg(results.positionAngles(positionNr)));
            
            plot(timeAxis,squeeze(correlationFunction2W0( ...
                orientationNr,positionNr,nNCasesNr,:) ...
                ./correlationFunction2W0( ...
                orientationNr,positionNr,nNCasesNr,1)));
            legendEntries{end+1} = sprintf('2 $\\omega_0$, NN: %i, $\\Theta$: %.1f, $\\varphi$: %.1f' ...
                ,nearestNeighbourCases(nNCasesNr) ...
                ,rad2deg(results.orientationAngles(orientationNr)) ...
                ,rad2deg(results.positionAngles(positionNr)));
        end
    end
end
legend(legendEntries,'interpreter','latex','Location','north' ...
    ,'FontSize',12);
xlabel('Time [sec]','interpreter','latex');
set(gca,'FontSize',12)
title('Normalized correlation functions for different orientations and positions');
hold off
grid minor






